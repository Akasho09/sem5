(3 pillars of TOC)  
--LAG-- 
1. Language:
'symbols'--> 
A symbol (often also called a character) is the smallest building block, which can be any alphabet, letter, or picture. 
{0,1,2,a,b};
'alphabet'--> Alphabets are a set of symbols, which are always finite. 
//𝚺(a,b)
'string' --> collection of alphabet
=>(aa,ab,ba,bb) of length=2 && (a,b) of length 1  for //𝚺(a,b) ;
# language is collection of strings
1. finite language
2. infinite language

2. "Automata" :
#  is the study of abstract machines and automata, 
# as well as the computational problems that can be solved using them.

3. Grammer
-> if string is part of language. 
- is defined as quadraple VTPS -
1. Variable
2. Terminal
3. Production rule
4. Start symbol


"kleen closure" :
L*:is Kleene Closure. L+: It is a Positive Closure => L* = εL+
𝚺(a+b)^* -->infinite language
𝚺^*=𝚺^+ + 𝚺^0(ε); (postive closure + sigma zero or epsilon) 


-- "Determinate Finite Automata " 
for a particular input character, the machine goes to one state only.
A transition function is defined on every state for every input symbol. 

DFA{ Q, Σ, δ, q. , F }:  --
Q:-> Set of finite states
𝚺 :-> a,b  --set of Input Symbols
δ : Transition Function.
q• :-> Start
F :-> Set of final states
# F is a subset of Q 

e.g :
all strings starting with a: {a,aa,ab,aaa ,.....}
State transition table for above automaton,
State/Symbol	a	    b
q0           	q1	    q2
q1	            q1	    q1
q2              q2      q2
